{"version":3,"sources":["webpack:///./src/app/views/sessions/error/error.component.css","webpack:///./src/app/views/sessions/error/error.component.html","webpack:///./src/app/views/sessions/error/error.component.ts","webpack:///./src/app/views/sessions/forgot-password/forgot-password.component.css","webpack:///./src/app/views/sessions/forgot-password/forgot-password.component.html","webpack:///./src/app/views/sessions/forgot-password/forgot-password.component.ts","webpack:///./src/app/views/sessions/lockscreen/lockscreen.component.css","webpack:///./src/app/views/sessions/lockscreen/lockscreen.component.html","webpack:///./src/app/views/sessions/lockscreen/lockscreen.component.ts","webpack:///./src/app/views/sessions/not-found/not-found.component.css","webpack:///./src/app/views/sessions/not-found/not-found.component.html","webpack:///./src/app/views/sessions/not-found/not-found.component.ts","webpack:///./src/app/views/sessions/sessions.module.ts","webpack:///./src/app/views/sessions/sessions.routing.ts","webpack:///./src/app/views/sessions/signin/signin.component.css","webpack:///./src/app/views/sessions/signin/signin.component.html","webpack:///./src/app/views/sessions/signin/signin.component.ts","webpack:///./src/app/views/sessions/signup/signup.component.css","webpack:///./src/app/views/sessions/signup/signup.component.html","webpack:///./src/app/views/sessions/signup/signup.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mB;;;;;;;;;;;ACAA,0qB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,+lD;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACC;AAM9D;IAIE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IACD,6CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,eAAe,CAAC;IAC1C,CAAC;IAT0B;QAA1B,+DAAS,CAAC,gEAAc,CAAC;kCAAc,gEAAc;gEAAC;IACjC;QAArB,+DAAS,CAAC,2DAAS,CAAC;kCAAe,2DAAS;iEAAC;IAHnC,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;;OACW,uBAAuB,CAYnC;IAAD,8BAAC;CAAA;AAZmC;;;;;;;;;;;;ACPpC,mB;;;;;;;;;;;ACAA,orD;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACC;AAO9D;IAQE;QAJA,mBAAc,GAAG;YACf,QAAQ,EAAE,EAAE;SACb;IAEe,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IAED,oCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEjC,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,eAAe,CAAC;IAC1C,CAAC;IAjB0B;QAA1B,+DAAS,CAAC,gEAAc,CAAC;kCAAc,gEAAc;4DAAC;IACjC;QAArB,+DAAS,CAAC,2DAAS,CAAC;kCAAe,2DAAS;6DAAC;IAFnC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,mBAAmB,CAmB/B;IAAD,0BAAC;CAAA;AAnB+B;;;;;;;;;;;;ACRhC,mB;;;;;;;;;;;ACAA,krB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACM;AACmB;AACnB;AAQnB;AAC4B;AAExD,0FAA0F;AACJ;AACd;AACZ;AACA;AACR;AACgB;AACX;AAkBzD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAhB1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,sEAAoB;gBACpB,iEAAe;gBACf,gEAAc;gBACd,+DAAa;gBACb,mEAAiB;gBACjB,+DAAa;gBACb,qEAAgB;gBAChB,4DAAY,CAAC,QAAQ,CAAC,iEAAc,CAAC;aACtC;YACD,YAAY,EAAE,CAAC,kGAAuB,EAAE,oFAAmB,EAAE,wEAAe,EAAE,wEAAe,EAAE,iFAAiB,EAAE,sEAAc,CAAC;SAClI,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACrC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsF;AACd;AACZ;AACA;AACQ;AACX;AAElD,IAAM,cAAc,GAAW;IACpC;QACE,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE,CAAC;gBACT,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;gBAC1B,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE;aAC1B,EAAE;gBACD,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;gBAC1B,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE;aAC1B,EAAE;gBACD,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,kGAAuB;gBAClC,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;aACnC,EAAE;gBACD,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,oFAAmB;gBAC9B,IAAI,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE;aAC9B,EAAE;gBACD,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,gFAAiB;gBAC5B,IAAI,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE;aAC7B,EAAE;gBACD,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,qEAAc;gBACzB,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;aACzB,CAAC;KACH;CACF,CAAC;;;;;;;;;;;;ACtCF,mB;;;;;;;;;;;ACAA,66E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC6D;AACC;AACM;AACgB;AAC3C;AAOzC;IAME,yBAAoB,IAAyB,EAAU,MAAc;QAAjD,SAAI,GAAJ,IAAI,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE1E,kCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,UAAU,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SACnC,CAAC;IACJ,CAAC;IAKD,gCAAM,GAAN;QAAA,iBAiBC;QAhBC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAEjC,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,eAAe,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YAC3E,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAC7C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACX,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;YAClD,KAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAC;YACnC,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IAGD,CAAC;IAnC0B;QAA1B,+DAAS,CAAC,gEAAc,CAAC;kCAAc,gEAAc;wDAAC;IACjC;QAArB,+DAAS,CAAC,2DAAS,CAAC;kCAAe,2DAAS;yDAAC;IAFnC,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAO0B,yFAAmB,EAAkB,sDAAM;OAN1D,eAAe,CAsC3B;IAAD,sBAAC;CAAA;AAtC2B;;;;;;;;;;;;ACZ5B,mB;;;;;;;;;;;ACAA,kgH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACC;AACM;AAClB;AAOlD;IAKE;IAAe,CAAC;IAEhB,kCAAQ,GAAR;QACE,IAAM,QAAQ,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QAC1D,IAAM,eAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,+DAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEhF,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,QAAQ;YAClB,eAAe,EAAE,eAAe;YAChC,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,UAAC,OAAoB;gBAC/C,IAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC7B,EAAE,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,MAAM,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE;gBACzB,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC,CAAC;SACH,CAAC;IACJ,CAAC;IAED,gCAAM,GAAN;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAExB,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,eAAe,CAAC;IAC1C,CAAC;IA9B0B;QAA1B,+DAAS,CAAC,gEAAc,CAAC;kCAAc,gEAAc;wDAAC;IACjC;QAArB,+DAAS,CAAC,2DAAS,CAAC;kCAAe,2DAAS;yDAAC;IAFnC,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAiC3B;IAAD,sBAAC;CAAA;AAjC2B","file":"views-sessions-sessions-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"page-wrap height-100 default-bg\\\">\\n  <div class=\\\"app-error\\\">\\n    <div class=\\\"fix\\\">\\n      <mat-icon class=\\\"error-icon\\\" color=\\\"warn\\\">warning</mat-icon>\\n      <div class=\\\"error-text\\\">\\n        <h1 class=\\\"error-title\\\">500</h1>\\n        <div class=\\\"error-subtitle\\\">Server Error!</div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"error-actions\\\">\\n      <button \\n      mat-raised-button \\n      color=\\\"primary\\\"\\n      class=\\\"mb-1 mr-05\\\"\\n      [routerLink]=\\\"['/dashboard']\\\">Back to Dashboard</button>\\n      <button \\n      mat-raised-button \\n      color=\\\"warn\\\">Report this Problem</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\n  <div class=\\\"session-form-hold\\\">\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\n    <mat-card>\\n      <mat-card-content>\\n        <div class=\\\"text-center pb-1\\\">\\n          <img src=\\\"assets/images/logo-full.png\\\" alt=\\\"\\\" class=\\\"mb-05\\\">\\n          <p class=\\\"text-muted m-0\\\">New password will be sent to your email address</p>\\n        </div>\\n        <form #fpForm=\\\"ngForm\\\" (ngSubmit)=\\\"submitEmail()\\\">\\n\\n          <div class=\\\"\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input\\n                matInput\\n                name=\\\"email\\\"\\n                required\\n                [(ngModel)]=\\\"userEmail\\\"\\n                #email=\\\"ngModel\\\"\\n                placeholder=\\\"Email\\\"\\n                value=\\\"\\\">\\n            </mat-form-field>\\n            <small \\n              *ngIf=\\\"email.errors && (email.dirty || email.touched) && (email.errors.required)\\\" \\n              class=\\\"form-error-msg\\\"> Email is required </small>\\n          </div>\\n\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" [disabled]=\\\"fpForm.invalid\\\">Submit</button>\\n          <div class=\\\"text-center\\\">\\n            <a [routerLink]=\\\"'/sessions/signin'\\\" class=\\\"mat-primary text-center full-width\\\">Sign in</a>\\n            <span fxFlex></span>\\n            <a [routerLink]=\\\"'/sessions/signup'\\\" class=\\\"mat-primary text-center full-width\\\">Create a new account</a>\\n          </div>\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  userEmail;\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  submitEmail() {\n    this.submitButton.disabled = true;\n    this.progressBar.mode = 'indeterminate';\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\n  <div class=\\\"session-form-hold session-lockscreen\\\">\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\n    <mat-card>\\n      <mat-card-content>\\n        <div fxFlex=\\\"column\\\" fxFlexWrap=\\\"wrap\\\">\\n          <div fxFlexWrap=\\\"wrap\\\" class=\\\"lockscreen-user\\\">\\n            <img class=\\\"lockscreen-face\\\" src=\\\"assets/images/face-3.jpg\\\" alt=\\\"\\\">\\n            <h5 class=\\\"m-0 font-normal\\\">John Doe</h5>\\n            <small class=\\\"text-muted\\\">Last seen 1 hour ago</small>\\n          </div>\\n          <form #lockscreenForm=\\\"ngForm\\\" (ngSubmit)=\\\"unlock()\\\">\\n            <div class=\\\"\\\">\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input \\n                  type=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  required\\n                  matInput\\n                  [(ngModel)]=\\\"lockscreenData.password\\\"\\n                  #password=\\\"ngModel\\\"\\n                  placeholder=\\\"Password\\\">\\n              </mat-form-field>\\n              <small \\n                *ngIf=\\\"password.errors && (password.dirty || password.touched) && (password.errors.required)\\\" \\n                class=\\\"form-error-msg\\\"> Password is required </small>\\n            </div>\\n            \\n            <button mat-raised-button class=\\\"mat-primary full-width mb-05\\\" [disabled]=\\\"lockscreenForm.invalid\\\">Unlock</button>\\n            <button mat-raised-button [routerLink]=\\\"'/sessions/signin'\\\" color=\\\"accent\\\" class=\\\"mat-primary full-width\\\">It's Not Me!</button>\\n          </form>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\n\n@Component({\n  selector: 'app-lockscreen',\n  templateUrl: './lockscreen.component.html',\n  styleUrls: ['./lockscreen.component.css']\n})\nexport class LockscreenComponent implements OnInit {\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  lockscreenData = {\n    password: ''\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  unlock() {\n    console.log(this.lockscreenData);\n\n    this.submitButton.disabled = true;\n    this.progressBar.mode = 'indeterminate';\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"page-wrap height-100 default-bg\\\">\\n  <div class=\\\"app-error\\\">\\n    <div class=\\\"fix\\\">\\n      <mat-icon class=\\\"error-icon\\\" color=\\\"warn\\\">error</mat-icon>\\n      <div class=\\\"error-text\\\">\\n        <h1 class=\\\"error-title\\\">404</h1>\\n        <div class=\\\"error-subtitle\\\">Page Not Found!</div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"error-actions\\\">\\n      <button \\n      mat-raised-button \\n      color=\\\"primary\\\"\\n      class=\\\"mb-1 mr-05\\\"\\n      [routerLink]=\\\"['/dashboard']\\\">Back to Dashboard</button>\\n      \\n      <button \\n      mat-raised-button \\n      color=\\\"warn\\\">Report this Problem</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from \"@angular/router\";\nimport { \n  MatProgressBarModule,\n  MatButtonModule,\n  MatInputModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatIconModule\n } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// import { CommonDirectivesModule } from './sdirectives/common/common-directives.module';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SessionsRoutes } from \"./sessions.routing\";\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ErrorComponent } from './error/error.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatIconModule,\n    FlexLayoutModule,\n    RouterModule.forChild(SessionsRoutes)\n  ],\n  declarations: [ForgotPasswordComponent, LockscreenComponent, SigninComponent, SignupComponent, NotFoundComponent, ErrorComponent]\n})\nexport class SessionsModule { }","import { Routes } from '@angular/router';\n\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ErrorComponent } from './error/error.component';\n\nexport const SessionsRoutes: Routes = [\n  {\n    path: '',\n    children: [{\n      path: 'signup',\n      component: SignupComponent,\n      data: { title: 'Signup' }\n    }, {\n      path: 'signin',\n      component: SigninComponent,\n      data: { title: 'Signin' }\n    }, {\n      path: 'forgot-password',\n      component: ForgotPasswordComponent,\n      data: { title: 'Forgot password' }\n    }, {\n      path: 'lockscreen',\n      component: LockscreenComponent,\n      data: { title: 'Lockscreen' }\n    }, {\n      path: '404',\n      component: NotFoundComponent,\n      data: { title: 'Not Found' }\n    }, {\n      path: 'error',\n      component: ErrorComponent,\n      data: { title: 'Error' }\n    }]\n  }\n];","module.exports = \"\"","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\n  <div class=\\\"session-form-hold\\\">\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\n    <mat-card>\\n      <mat-card-content>\\n        <div class=\\\"text-center pb-1\\\">\\n          <img src=\\\"assets/images/logo-full.png\\\" alt=\\\"\\\" class=\\\"mb-05\\\">\\n          <p class=\\\"text-muted m-0\\\">Sign in to your account</p>\\n        </div>\\n        <form [formGroup]=\\\"signinForm\\\" (ngSubmit)=\\\"signin()\\\">\\n          <div class=\\\"\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input\\n                matInput\\n                name=\\\"username\\\"\\n                [formControl]=\\\"signinForm.controls['username']\\\"\\n                placeholder=\\\"Username\\\"\\n                value=\\\"\\\">\\n            </mat-form-field>\\n            <small\\n              *ngIf=\\\"signinForm.controls['username'].hasError('required') && signinForm.controls['username'].touched\\\"\\n              class=\\\"form-error-msg\\\"> Username is required </small>\\n          </div>\\n\\n          <div class=\\\"\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input\\n                type=\\\"password\\\"\\n                name=\\\"password\\\"\\n                matInput\\n                [formControl]=\\\"signinForm.controls['password']\\\"\\n                placeholder=\\\"Password\\\"\\n                value=\\\"\\\">\\n            </mat-form-field>\\n            <small\\n              *ngIf=\\\"signinForm.controls['password'].hasError('required') && signinForm.controls['password'].touched\\\"\\n              class=\\\"form-error-msg\\\"> Password is required </small>\\n          </div>\\n\\n          <div class=\\\"pb-1\\\">\\n            <mat-checkbox\\n              name=\\\"rememberMe\\\"\\n              [formControl]=\\\"signinForm.controls['rememberMe']\\\"\\n              class=\\\"pb-1\\\">Remember this computer</mat-checkbox>\\n          </div>\\n\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" [disabled]=\\\"signinForm.invalid\\\">Sign in</button>\\n          <div class=\\\"text-center\\\">\\n            <a [routerLink]=\\\"'/sessions/forgot-password'\\\" class=\\\"mat-primary text-center full-width\\\">Forgot password</a>\\n            <span fxFlex></span>\\n            <!-- <a [routerLink]=\\\"'/sessions/signup'\\\" class=\\\"mat-primary text-center full-width\\\">Create a new account</a> -->\\n          </div>\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n\"","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { FirebaseauthService } from '../../../shared/services/firebaseauth.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  signinForm: FormGroup;\n\n  constructor(private auth: FirebaseauthService, private router: Router) { }\n\n  ngOnInit() {\n    this.signinForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      rememberMe: new FormControl(false)\n    })\n  }\n\n\n\n\n  signin() {\n    const signinData = this.signinForm.value;\n    console.log(signinData);\n    console.log(signinData.username);\n\n    this.submitButton.disabled = true;\n       this.progressBar.mode = 'indeterminate';\nthis.auth.signInWithEmail(signinData.username, signinData.password).then((val)=>{\n  console.log(\"i am in then of main function\");\n  this.router.navigate(['dashboard']);\n}).catch((err)=>{\n  console.log(\"i am in cath of else Main function\");\n  this.submitButton.disabled = false;\n  this.progressBar.mode = null;\n});\n\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\n  <div class=\\\"session-form-hold\\\">\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\n    <mat-card>\\n      <mat-card-content>\\n        <div class=\\\"text-center pb-1\\\">\\n          <img src=\\\"assets/images/logo-full.png\\\" alt=\\\"\\\" class=\\\"mb-05\\\">\\n          <p class=\\\"text-muted m-0\\\">Sign up to use our service</p>\\n        </div>\\n        <form [formGroup]=\\\"signupForm\\\"  (ngSubmit)=\\\"signup()\\\">\\n          <div class=\\\"\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input\\n                matInput\\n                type=\\\"email\\\"\\n                name=\\\"email\\\"\\n                [formControl]=\\\"signupForm.controls['email']\\\"\\n                placeholder=\\\"Your Email\\\"\\n                value=\\\"\\\">\\n            </mat-form-field>\\n            <small \\n              *ngIf=\\\"signupForm.controls['email'].hasError('required') && signupForm.controls['email'].touched\\\" \\n              class=\\\"form-error-msg\\\"> Email is required </small>\\n\\n              <small \\n                *ngIf=\\\"signupForm.controls['email'].hasError('email') && signupForm.controls['email'].touched\\\" \\n                class=\\\"form-error-msg\\\"> Invaild email address </small>\\n          </div>\\n\\n          <div class=\\\"\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input \\n                type=\\\"password\\\"\\n                name=\\\"password\\\"\\n                matInput\\n                [formControl]=\\\"signupForm.controls['password']\\\"\\n                placeholder=\\\"Password\\\" \\n                value=\\\"\\\">\\n            </mat-form-field>\\n            <small \\n              *ngIf=\\\"signupForm.controls['password'].hasError('required') && signupForm.controls['password'].touched\\\" \\n              class=\\\"form-error-msg\\\"> Password is required </small>\\n          </div>\\n          \\n          <div class=\\\"\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input\\n                type=\\\"password\\\"\\n                name=\\\"confirmPassword\\\"\\n                matInput\\n                [formControl]=\\\"signupForm.controls['confirmPassword']\\\"\\n                placeholder=\\\"Confirm Password\\\"\\n                value=\\\"\\\">\\n            </mat-form-field>\\n            <small *ngIf=\\\"signupForm.controls['confirmPassword'].hasError('required') && signupForm.controls['confirmPassword'].touched\\\" class=\\\"form-error-msg\\\">Confirm password is required.</small>\\n            <small *ngIf=\\\"signupForm.controls['confirmPassword'].hasError('equalTo')\\\" class=\\\"form-error-msg\\\">Passwords do not math.</small>\\n          </div>\\n          \\n          <div class=\\\"pb-1\\\">\\n            <mat-checkbox\\n              name=\\\"agreed\\\"\\n              [formControl]=\\\"signupForm.controls['agreed']\\\"\\n              class=\\\"pb-1\\\">I have read and agree to the terms of service.</mat-checkbox>\\n\\n              <small \\n                *ngIf=\\\"signupForm.controls['agreed'].hasError('agreed') && signupForm.controls['agreed'].touched\\\" \\n                class=\\\"form-error-msg\\\"> You must agree to the terms and conditions </small>\\n          </div>\\n\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" [disabled]=\\\"signupForm.invalid\\\">Sign up</button>\\n          <div class=\\\"text-center\\\">\\n            <a [routerLink]=\\\"'/sessions/signin'\\\" class=\\\"mat-primary text-center full-width\\\">Sign in to existing account</a>\\n          </div>\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatProgressBar, MatButton } from '@angular/material';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\n  @ViewChild(MatButton) submitButton: MatButton;\n\n  signupForm: FormGroup\n  constructor() {}\n\n  ngOnInit() {\n    const password = new FormControl('', Validators.required);\n    const confirmPassword = new FormControl('', CustomValidators.equalTo(password));\n\n    this.signupForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: password,\n      confirmPassword: confirmPassword,\n      agreed: new FormControl('', (control: FormControl) => {\n        const agreed = control.value;\n        if(!agreed) {\n          return { agreed: true }\n        }\n        return null;\n      })\n    })\n  }\n\n  signup() {\n    const signupData = this.signupForm.value;\n    console.log(signupData);\n\n    this.submitButton.disabled = true;\n    this.progressBar.mode = 'indeterminate';\n  }\n\n}\n"],"sourceRoot":""}